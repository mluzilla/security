AWSTemplateFormatVersion: 2010-09-09
Description: Mozilla Multi Account Manager member account role to allow Mozilla Enterprise Information Security (EIS) GuardDuty master to accept invitations.
Metadata:
  Source: https://github.com/mozilla/security/blob/master/operations/aws-security-roles/guardduty-member-account-role-mozilla.yml
  Note1: >
    This is a customized version of
    https://github.com/mozilla/guardduty-multi-account-manager/blob/master/cloudformation/guardduty-member-account-role.yml
    with Mozilla specific defaults added. This is available for use at
    https://s3.amazonaws.com/infosec-cloudformation-templates/guardduty-member-account-role-mozilla.yml
    This template can only be deployed in us-west-2, us-east-1, us-west-1 and eu-west-1.
  TemplateVersion: 1.0.2
Mappings:
  Variables:
    GuardDutyMasterAccount:
      Principal: arn:aws:iam::371522382791:root
    SNSTopicForPublishingStackOutput:
      Account: 371522382791
      Topic: cloudformation-stack-emissions
  TheRegionYouAreDeployingIn:
    us-west-2:
      WhatIsThisMapping: This constrains the regions in which you can deploy this template to only the regions listed in this mapping. This, for example, prevents deploying in ap-south-1
      IsNotSupportedPleaseUseADifferentRegion: True
    us-east-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
    us-west-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
    eu-west-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
Conditions:
  RunningInAllowedRegion: !Equals [ !FindInMap [ TheRegionYouAreDeployingIn, !Ref 'AWS::Region', IsNotSupportedPleaseUseADifferentRegion ] , True ]
Resources:
  GuardDutyInvitationAcceptorIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !FindInMap [ Variables, GuardDutyMasterAccount, Principal ]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowAcceptingGuardDutyInvitation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - guardduty:ListDetectors
                  - guardduty:CreateDetector
                  - guardduty:DeleteDetector
                  - guardduty:AcceptInvitation
                  - guardduty:DeleteInvitations
                  - guardduty:GetDetector
                  - guardduty:GetInvitationsCount
                  - guardduty:GetGuardDutyMasterAccount
                  - guardduty:UpdateDetector
                  - guardduty:ListInvitations
                  - guardduty:DisassociateFromGuardDutyMasterAccount
                Resource: '*'
      Path: '/multi-account-guard-duty/'
  PublishGuardDutyInvitationAcceptorIAMRoleArnsToSNS:
    Type: Custom::PublishGuardDutyInvitationAcceptorIAMRoleArnsToSNS
    Version: '1.0'
    Properties:
      ServiceToken: !Join [ ':', [ 'arn:aws:sns', !Ref 'AWS::Region', !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Account ], !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Topic ] ] ]
      category: GuardDuty Multi Account Member Role
      GuardDutyMemberAccountIAMRoleArn: !GetAtt GuardDutyInvitationAcceptorIAMRole.Arn
      GuardDutyMemberAccountIAMRoleName: !Ref GuardDutyInvitationAcceptorIAMRole
  CloudFormationLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: AllowLambdaLoggingAndCreateServiceLinkedRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:*
                  - iam:CreateServiceLinkedRole
                Resource: '*'
  CreateGuardDutyServiceLinkedRoleFunction:
    Type: AWS::Lambda::Function
    DependsOn: CloudFormationLambdaIAMRole
    Properties:
      Code:
        ZipFile: |
            import cfnresponse
            import boto3, secrets, string


            def handler(event, context):
                client = boto3.client('iam')
                created = False
                try:
                    if event['RequestType'] in ['Create', 'Update']:
                        client.create_service_linked_role(
                            AWSServiceName='guardduty.amazonaws.com',
                            Description='A service-linked role required for Amazon '
                                        'GuardDuty to access your resources.'
                        )
                        created = True
                    elif event['RequestType'] == 'Delete':
                        pass  # Leave the role in place when stack is deleted
                except client.exceptions.InvalidInputException:
                    pass  # Role already exists
                if 'PhysicalResourceId' in event:
                    physical_id = event['PhysicalResourceId']
                else:
                    random_string = ''.join(
                        secrets.choice(string.ascii_uppercase + string.digits)
                        for _ in range(13))
                    physical_id = "CreateGuardDutyServiceLinkedRole-{}".format(
                        random_string)
                cfnresponse.send(
                    event, context, cfnresponse.SUCCESS, {'RoleCreated': created},
                    physical_id)
      Handler: index.handler
      Runtime: python3.9
      Role: !GetAtt CloudFormationLambdaIAMRole.Arn
      Timeout: 20
  CreateGuardDutyServiceLinkedRole:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CreateGuardDutyServiceLinkedRoleFunction.Arn
Outputs:
  GuardDutyInvitationAcceptorRoleName:
    Description: IAM Role name of the Guard Duty Invitation Acceptor
    Value: !Ref GuardDutyInvitationAcceptorIAMRole
  GuardDutyInvitationAcceptorRoleArn:
    Description: ARN of the Guard Duty Invitation Acceptor IAM Role
    Value: !GetAtt GuardDutyInvitationAcceptorIAMRole.Arn
